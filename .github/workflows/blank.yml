# This is a basic workflow to help you get started with Actions

name: eslint

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: 'node:18.18.2-alpine3.18'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      # Static code analysis (Proxy, JS): static-code-analysis
      - run: ls
      - run: cd ..
      - name: Run a one-line script
        run: |
          npm install npm@8.3.0 -g
          npm install -g apigeelint
          apigeelint -h
          apigeelint -s apiproxy -f html.js -e PO013 > apigeelint-out.html
      - run: ls
      - uses: actions/upload-artifact@v3
        with:
          name: apigeelint-out
          path: apigeelint-out.html

      # Runs a set of test
      - name: mocha
        run: |
          npm install -g mocha-junit-reporter
          npm i mocha -g
          mocha test --reporter mocha-junit-reporter
      - run: ls
      - uses: actions/upload-artifact@v3
        with:
          name: index.html
          path: index.html
  
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

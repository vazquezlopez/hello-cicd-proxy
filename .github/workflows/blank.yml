# This is a basic workflow to help you get started with Actions

name: CI

on:
   # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{ vars.ENV_CONTEXT_VAR }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Print variables
      run: |
        echo "environment variable : $APIGEE_ENV"
        echo "organization variable : $APIGEE_ORG"
        echo "overridden variable : $APIGEE_PROXY_NAME"
        echo "variable from shell environment : $env_var"
      env:
        APIGEE_ENV: ${{ vars.APIGEE_ENV }}
        APIGEE_ORG: ${{ vars.APIGEE_ORG }}
        APIGEE_PROXY_NAME: ${{ vars.APIGEE_PROXY_NAME }}
    - name: auth with Google
      id: auth
      uses: google-github-actions/auth@v0
      with:
        token_format: "access_token"
        create_credentials_file: true
        activate_credentials_file: true
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_POOL_ID }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
    - name: Create API bundle
      run: zip -r proxy.zip apiproxy
    - name: Upload API Proxy Bundle
      id: upload
      run: "echo \"apigee-revision=$(curl --fail -X POST -H \"Content-Type: multipart/form-data\" -H \"Authorization: Bearer ${{steps.auth.outputs.access_token}}\" -F \"file=@proxy.zip\" \"https://apigee.googleapis.com/v1/organizations/${{vars.APIGEE_ORG}}/apis?action=import&name=${{vars.APIGEE_PROXY_NAME}}\" --silent | jq --raw-output .revision)\" >> $GITHUB_OUTPUT"
    - name: Deploy Revision
      run: "curl \"https://apigee.googleapis.com/v1/organizations/${{ vars.APIGEE_ORG }}/environments/${{vars.APIGEE_ENV}}/apis/${{vars.APIGEE_PROXY_NAME}}/revisions/${{steps.upload.outputs.apigee-revision}}/deployments?override=true\" -X POST -H \"Authorization: Bearer ${{steps.auth.outputs.access_token}}\""
